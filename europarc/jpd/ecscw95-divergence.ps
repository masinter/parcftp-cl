%!PS-Adobe-3.0
%%Title: (ECSCW95 Divergence)
%%Creator: (Microsoft Word: LaserWriter 8.0 8.0)
%%CreationDate: (15:55 Tuesday, April 11, 1995)
%%For: (dourish)
%%Pages: 17
%%DocumentFonts: Times-Roman Times-Italic Helvetica-Bold Helvetica Courier
%%DocumentNeededFonts: Times-Roman Times-Italic Helvetica-Bold Helvetica Courier
%%DocumentSuppliedFonts:
%%DocumentData: Clean7Bit
%%PageOrder: Ascend
%%Orientation: Portrait
%ADO_PaperArea: -30 -28 811 566
%ADO_ImageableArea: 0 0 781 538
%%EndComments
/md 150 dict def md begin
/currentpacking where {pop /sc_oldpacking currentpacking def true setpacking}if
%%BeginFile: adobe_psp_basic
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/bd{bind def}bind def
/xdf{exch def}bd
/xs{exch store}bd
/ld{load def}bd
/Z{0 def}bd
/T/true
/F/false
/:L/lineto
/lw/setlinewidth
/:M/moveto
/rl/rlineto
/rm/rmoveto
/:C/curveto
/:T/translate
/:K/closepath
/:mf/makefont
/gS/gsave
/gR/grestore
/np/newpath
14{ld}repeat
/$m matrix def
/av 80 def
/por true def
/normland false def
/psb-nosave{}bd
/pse-nosave{}bd
/us Z
/psb{/us save store}bd
/pse{us restore}bd
/level2
/languagelevel where
{
pop languagelevel 2 ge
}{
false
}ifelse
def
/featurecleanup
{
stopped
cleartomark
countdictstack exch sub dup 0 gt
{
{end}repeat
}{
pop
}ifelse
}bd
/noload Z
/startnoload
{
{/noload save store}if
}bd
/endnoload
{
{noload restore}if
}bd
level2 startnoload
/setjob
{
statusdict/jobname 3 -1 roll put
}bd
/setcopies
{
userdict/#copies 3 -1 roll put
}bd
level2 endnoload level2 not startnoload
/setjob
{
1 dict begin/JobName xdf currentdict end setuserparams
}bd
/setcopies
{
1 dict begin/NumCopies xdf currentdict end setpagedevice
}bd
level2 not endnoload
/pm Z
/mT Z
/sD Z
/realshowpage Z
/initializepage
{
/pm save store mT concat
}bd
/endp
{
pm restore showpage
}def
/$c/DeviceRGB def
/rectclip where
{
pop/rC/rectclip ld
}{
/rC
{
np 4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
clip np
}bd
}ifelse
/rectfill where
{
pop/rF/rectfill ld
}{
/rF
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
fill
gR
}bd
}ifelse
/rectstroke where
{
pop/rS/rectstroke ld
}{
/rS
{
gS
np
4 2 roll
:M
1 index 0 rl
0 exch rl
neg 0 rl
:K
stroke
gR
}bd
}ifelse
%%EndFile
%%BeginFile: adobe_psp_colorspace_level1
%%Copyright: Copyright 1991-1993 Adobe Systems Incorporated. All Rights Reserved.
/G/setgray ld
/:F/setrgbcolor ld
%%EndFile
%%BeginFile: adobe_psp_uniform_graphics
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/@a
{
np :M 0 rl :L 0 exch rl 0 rl :L fill
}bd
/@b
{
np :M 0 rl 0 exch rl :L 0 rl 0 exch rl fill
}bd
/arct where
{
pop
}{
/arct
{
arcto pop pop pop pop
}bd
}ifelse
/x1 Z
/x2 Z
/y1 Z
/y2 Z
/rad Z
/@q
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
fill
}bd
/@s
{
/rad xs
/y2 xs
/x2 xs
/y1 xs
/x1 xs
np
x2 x1 add 2 div y1 :M
x2 y1 x2 y2 rad arct
x2 y2 x1 y2 rad arct
x1 y2 x1 y1 rad arct
x1 y1 x2 y1 rad arct
:K
stroke
}bd
/@i
{
np 0 360 arc fill
}bd
/@j
{
gS
np
:T
scale
0 0 .5 0 360 arc
fill
gR
}bd
/@e
{
np
0 360 arc
:K
stroke
}bd
/@f
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 0 360 arc
:K
$m setmatrix
stroke
}bd
/@k
{
gS
np
:T
0 0 :M
0 0 5 2 roll
arc fill
gR
}bd
/@l
{
gS
np
:T
0 0 :M
scale
0 0 .5 5 -2 roll arc
fill
gR
}bd
/@m
{
np
arc
stroke
}bd
/@n
{
np
$m currentmatrix
pop
:T
scale
0 0 .5 5 -2 roll arc
$m setmatrix
stroke
}bd
%%EndFile
%%BeginFile: adobe_psp_basic_text
%%Copyright: Copyright 1990-1993 Adobe Systems Incorporated. All Rights Reserved.
/S/show ld
/A{
0.0 exch ashow
}bd
/R{
0.0 exch 32 exch widthshow
}bd
/W{
0.0 3 1 roll widthshow
}bd
/J{
0.0 32 4 2 roll 0.0 exch awidthshow
}bd
/V{
0.0 4 1 roll 0.0 exch awidthshow
}bd
/fcflg true def
/fc{
fcflg{
vmstatus exch sub 50000 lt{
(%%[ Warning: Running out of memory ]%%\r)print flush/fcflg false store
}if pop
}if
}bd
/$f[1 0 0 -1 0 0]def
/:ff{$f :mf}bd
/MacEncoding StandardEncoding 256 array copy def
MacEncoding 39/quotesingle put
MacEncoding 96/grave put
/Adieresis/Aring/Ccedilla/Eacute/Ntilde/Odieresis/Udieresis/aacute
/agrave/acircumflex/adieresis/atilde/aring/ccedilla/eacute/egrave
/ecircumflex/edieresis/iacute/igrave/icircumflex/idieresis/ntilde/oacute
/ograve/ocircumflex/odieresis/otilde/uacute/ugrave/ucircumflex/udieresis
/dagger/degree/cent/sterling/section/bullet/paragraph/germandbls
/registered/copyright/trademark/acute/dieresis/notequal/AE/Oslash
/infinity/plusminus/lessequal/greaterequal/yen/mu/partialdiff/summation
/product/pi/integral/ordfeminine/ordmasculine/Omega/ae/oslash
/questiondown/exclamdown/logicalnot/radical/florin/approxequal/Delta/guillemotleft
/guillemotright/ellipsis/space/Agrave/Atilde/Otilde/OE/oe
/endash/emdash/quotedblleft/quotedblright/quoteleft/quoteright/divide/lozenge
/ydieresis/Ydieresis/fraction/currency/guilsinglleft/guilsinglright/fi/fl
/daggerdbl/periodcentered/quotesinglbase/quotedblbase/perthousand
/Acircumflex/Ecircumflex/Aacute/Edieresis/Egrave/Iacute/Icircumflex/Idieresis/Igrave
/Oacute/Ocircumflex/apple/Ograve/Uacute/Ucircumflex/Ugrave/dotlessi/circumflex/tilde
/macron/breve/dotaccent/ring/cedilla/hungarumlaut/ogonek/caron
MacEncoding 128 128 getinterval astore pop
level2 startnoload
/copyfontdict
{
findfont dup length dict
begin
{
1 index/FID ne{def}{pop pop}ifelse
}forall
}bd
level2 endnoload level2 not startnoload
/copyfontdict
{
findfont dup length dict
copy
begin
}bd
level2 not endnoload
md/fontname known not{
/fontname/customfont def
}if
/Encoding Z
/:mre
{
copyfontdict
/Encoding MacEncoding def
fontname currentdict
end
definefont :ff def
}bd
/:bsr
{
copyfontdict
/Encoding Encoding 256 array copy def
Encoding dup
}bd
/pd{put dup}bd
/:esr
{
pop pop
fontname currentdict
end
definefont :ff def
}bd
/scf
{
scalefont def
}bd
/scf-non
{
$m scale :mf setfont
}bd
/ps Z
/fz{/ps xs}bd
/sf/setfont ld
/cF/currentfont ld
/mbf
{
/makeblendedfont where
{
pop
makeblendedfont
/ABlend exch definefont
}{
pop
}ifelse
def
}def
%%EndFile
/currentpacking where {pop sc_oldpacking setpacking}if
end		% md
%%EndProlog
%%BeginSetup
md begin
countdictstack
[
{%stopped
%%BeginFeature: *ManualFeed False
level2 {1 dict dup /ManualFeed false put setpagedevice}{statusdict begin /manualfeed false store end} ifelse
%%EndFeature
}featurecleanup
countdictstack
[
{%stopped
%%BeginFeature: *InputSlot Upper

%%EndFeature
}featurecleanup
(dourish)setjob
/pT[1 0 0 -1 28 811]def/mT[1 0 0 -1 28 811]def
/sD 16 dict def
300 level2{1 dict dup/WaitTimeout 4 -1 roll put setuserparams}{statusdict/waittimeout 3 -1 roll put}ifelse
%%IncludeFont: Times-Roman
%%IncludeFont: Times-Italic
%%IncludeFont: Helvetica-Bold
%%IncludeFont: Helvetica
%%IncludeFont: Courier
/f0_1/Times-Roman :mre
/f0_24 f0_1 24 scf
/f0_18 f0_1 18 scf
/f0_14 f0_1 14 scf
/f0_12 f0_1 12 scf
/f0_11 f0_1 11 scf
/f0_10 f0_1 10 scf
/f0_9 f0_1 9 scf
/f1_1/Times-Italic :mre
/f1_12 f1_1 12 scf
/f1_10 f1_1 10 scf
/f1_9 f1_1 9 scf
/f2_1/Helvetica-Bold :mre
/f2_10 f2_1 10 scf
/f3_1/Helvetica :mre
/f3_10 f3_1 10 scf
/f4_1/Courier :mre
/f4_11 f4_1 11 scf
/Courier findfont[10 0 0 -10 0 0]:mf setfont
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
initializepage
(dourish; page: 1 of 17)setjob
%%EndPageSetup
gS 0 0 538 781 rC
62 202 :M
f0_24 sf
-.024(The Parting of the Ways: Divergence,)A
62 226 :M
-.013(Data Management and Collaborative Work)A
62 256 :M
f0_14 sf
-.044(Paul Dourish)A
62 271 :M
f0_12 sf
1.989 .199(Rank Xerox Research Centre, Cambridge Laboratory \(EuroPARC\) and Dept of)J
62 286 :M
-.008(Computer Science, University College, London \(dourish@europarc.xerox.com\).)A
62 348 :M
f2_10 sf
-.078(Abstract)A
103 348 :M
f3_10 sf
1.914 .191(: Systems coordinating distributed collaborative work must manage user data)J
62 361 :M
.201 .02(distributed over a network. The strong consistency algorithms which designers have typically)J
62 374 :M
.38 .038(borrowed from the distributed systems community are often unsuited to the particular needs)J
62 387 :M
.435 .044(of CSCW. Here, I outline an alternative approach based on divergence and synchronisation)J
62 400 :M
.971 .097(between parallel streams of activity. From a CSCW perspective, this strategy offers three)J
62 413 :M
.721 .072(primary advantages. First, it is scalable, allowing smooth transitions from highly interactive)J
62 426 :M
.662 .066(collaboration to more extended, \322asynchronous\323  styles of work. Second, it supports \322multi)J
473 426 :M
(-)S
62 439 :M
.268 .027(synchronous\323 work, in which parties work independently in parallel. Third, it directly supports)J
62 452 :M
-.002(observed patterns of opportunistic activities in collaborative working.)A
62 516 :M
f0_18 sf
-.01(Introduction: Distributed Data Management)A
62 544 :M
f0_12 sf
1.497 .15(Collaborative applications coordinate activities which may be distributed in time)J
62 559 :M
.993 .099(and/or space. Distribution in time means that activities may take place at different)J
62 574 :M
1.12 .112(times, but are coordinated to achieve a unified effect \(such as the production of a)J
62 589 :M
1.073 .107(document\). Distribution in space means that activities may take place on different)J
62 604 :M
1.021 .102(computers, perhaps linked by a data network. Collaborative applications, then, are)J
62 619 :M
.47 .047(heir to a set of design problems which have arisen in the development of distributed)J
62 634 :M
2.699 .27(computing systems \(or just \322distributed systems\323\), concerning the distributed)J
62 649 :M
-.016(management of data.)A
76 664 :M
1.263 .126(This paper considers strategies which can be employed to meet the conflicting)J
62 679 :M
1.739 .174(demands placed on collaborative applications, in presenting users with a single,)J
62 694 :M
1.401 .14(uniform data \322space\323. We are primarily concerned here with \322user data\323; that is,)J
62 709 :M
.356 .036(largely the computational representations of artefacts which are manipulated directly)J
62 724 :M
.395 .039(by the system\325s users. So, in a collaborative writing system, user data would include)J
endp
%%Page: 2 2
%%BeginPageSetup
initializepage
(dourish; page: 2 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
1.171 .117(the computational representation of the document, or of users\325 activities over that)J
90 96 :M
-.04(document.)A
104 111 :M
.645 .065(There are a number of criteria must be met when this data is distributed across a)J
90 126 :M
-.015(network: )A
f1_12 sf
-.015(availability)A
191 126 :M
f0_12 sf
.372 .037(\321users should be able to gain access to data when they need it;)J
90 141 :M
f1_12 sf
.119(transparency)A
f0_12 sf
.427 .043(\321users should not have to worry about patterns of data distribution, or)J
90 156 :M
.912 .091(the details of the distribution management; )J
309 156 :M
f1_12 sf
.117(consistency)A
f0_12 sf
.557 .056(\321users should see identical)J
90 171 :M
.848 .085(\(or, at least, consistent\) views of shared data, even though they may be working at)J
90 186 :M
.129 .013(different places or different times; and )J
f1_12 sf
.038(responsiveness)A
352 186 :M
f0_12 sf
.245 .024(\321data management should not)J
90 201 :M
-.004(interfere with the interactive response of the system.)A
104 216 :M
1.716 .172(However, these criteria place conflicting demands on an implementation. For)J
90 231 :M
-.015(example, )A
f1_12 sf
-.015(availability)A
192 231 :M
f0_12 sf
.474 .047( can be enhanced by maintaining multiple copies of the data on)J
90 246 :M
-.006(different network nodes, increasing the probability that some copy will be available to)A
90 261 :M
.494 .049(a user when it is required. Unfortunately, this approach\321data )J
398 261 :M
f1_12 sf
-.044(replication)A
f0_12 sf
-.054(\321conflicts)A
90 276 :M
-.039(with )A
f1_12 sf
-.044(consistency)A
170 276 :M
f0_12 sf
.007 .001(, since two users can make incompatible changes to two copies of the)J
90 291 :M
.229 .023(same piece of data. Various strategies can be used to avoid or resolve these conflicts,)J
90 306 :M
-.039(but these, in turn, endanger )A
f1_12 sf
-.048(transparent)A
279 306 :M
f0_12 sf
-.014( operation, by introducing more ways in which)A
90 321 :M
.041 .004(users can be exposed to the consequences and details of distributed data management.)J
90 336 :M
-.005(Different systems have different requirements, and differently prioritise these criteria.)A
104 351 :M
.703 .07(These issues are endemic to distributed computer systems, and much research in)J
90 366 :M
.055 .005(the distributed systems community has focussed on their implications in areas such as)J
90 381 :M
.47 .047(distributed databases, distributed transaction processing and distributed file systems.)J
90 396 :M
2.07 .207(This paper concerns the relationship between distributed data management and)J
90 411 :M
.828 .083(applications supporting specifically collaborative work. I will argue that traditional)J
90 426 :M
.357 .036(mechanisms which we might adopt from distributed systems are frequently ill-suited)J
90 441 :M
-.013(to the needs of collaborative systems. I will outline an alternative approach, which has)A
90 456 :M
1.351 .135(been developed in Prospero, a toolkit for building collaborative applications, and)J
90 471 :M
.18 .018(show how it addresses problems in effectively supporting collaborative systems in an)J
90 486 :M
.048 .005(open and flexible way. Such flexibility is crucial to the design of a toolkit \(rather than)J
90 501 :M
.604 .06(individual applications\). First, though, I will outline some current approaches to the)J
90 516 :M
1.697 .17(problems of distributed data management, and in doing so, set out some issues,)J
90 531 :M
-.024(parameters and terminology)A
225 528 :M
f0_9 sf
(1)S
230 531 :M
f0_12 sf
(.)S
90 572 :M
f0_18 sf
-.023(Distributed Data and Collaborative Work)A
90 600 :M
f0_12 sf
.665 .066(A range of approaches have been employed to manage distributed data problems in)J
90 615 :M
.872 .087(collaborative technologies. In this section, I will focus on the design decisions and)J
90 630 :M
.1 .01(trade-offs which system designers make, particularly in CSCW systems, before going)J
90 645 :M
-.012(on to outline some of the inherent problems and an alternative strategy.)A
90 678 :M
f0_14 sf
-.06(Distribution)A
90 702 :M
f0_12 sf
-.01(One set of decisions concern the mechanisms which determine where a particular data)A
90 717 :M
2.435 .243(structure will reside in the system at any given time\321data )J
f1_12 sf
.639(distribution)A
f0_12 sf
2.413 .241(. The)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
90 739.24 -.24 .24 233.24 739 .24 90 739 @a
90 754 :M
f0_9 sf
(1)S
95 757 :M
.468 .047( At this point, I beg the indulgence of more technical readers. In a spirit of fairness, I\325ll beg the indulgence of)J
112 767 :M
-.031(non-technical readers later on.)A
endp
%%Page: 3 3
%%BeginPageSetup
initializepage
(dourish; page: 3 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
.33 .033(distinction between )J
f1_12 sf
.073(centralised)A
243 81 :M
f0_12 sf
.697 .07( and )J
269 81 :M
f1_12 sf
.152(replicated)A
f0_12 sf
.588 .059( approaches, has long been a concern)J
90 96 :M
1.141 .114(for CSCW developers \(Ahuja et al, 1990; Lauwers, 1990; Greenberg et al, 1992\).)J
90 111 :M
3.43 .343(Centralisation concentrates all the data at one point in the system; clients)J
90 126 :M
2.355 .235(communicate with this central point to retrieve or update information, and so)J
90 141 :M
.148 .015(\322consistency\323 is a trivial issue since there is only one copy of a data item at any time.)J
90 156 :M
.954 .095(Replication, however, allows multiple copies of data structures\321possibly as many)J
90 171 :M
.776 .078(copies are there are participants. Replication improves availability, but complicates)J
90 186 :M
-.013(consistency management.)A
104 201 :M
-.003(Orthogonal to this is the issue of data location. While most systems are static\321that)A
90 216 :M
.389 .039(is, the \322location\323 of any given piece of data is fixed during execution\321this is not an)J
90 231 :M
2.246 .225(inherent property. In a dynamic system, objects may )J
375 231 :M
f1_12 sf
.47(migrate)A
f0_12 sf
1.539 .154( from location to)J
90 246 :M
.99 .099(location. Distributed document management systems, or Workflow systems, might)J
90 261 :M
-.014(use this approach, moving the active data set from user to user. This technique may be)A
90 276 :M
-.009(used along with either centralised or replicated approaches.)A
90 309 :M
f0_14 sf
-.009(Management)A
90 333 :M
f0_12 sf
-.002(The critical question for any distribution strategy, however, is how consistency can be)A
90 348 :M
-.013(maintained in the face of the simultaneous activity of multiple users)A
104 363 :M
.595 .06(In many cases, this is a \322non-problem\323. Many applications simply do not require)J
90 378 :M
1.966 .197(absolute consistency in their user data. For instance, in a \322shared whiteboard\323,)J
90 393 :M
.54 .054(absolute consistency is generally not a concern and the system would be unlikely to)J
90 408 :M
3.484 .348(attempt to rigorously maintain data integrity. However, in more structured)J
90 423 :M
.469 .047(applications, consistency can become a key requirement. The kinds of inconsistency)J
90 438 :M
-.002(acceptable on a shared whiteboard are unacceptable in a spreadsheet.)A
104 453 :M
2.805 .28(Inconsistency generally arises through misorderings in applying individual)J
90 468 :M
.855 .086(changes to user data at different sites. User actions arise independently at different)J
90 483 :M
.098 .01(points in the network, and are then propagated to other users. This distributed activity)J
90 498 :M
1.777 .178(introduces timing problems; event notifications may arrive at different nodes in)J
90 513 :M
.455 .045(different, unpredictable sequences. To maintain consistency, the system must ensure)J
90 528 :M
-.009(that each client sees the result of these changes applied )A
357 528 :M
f1_12 sf
-.049(in a consistent order)A
456 528 :M
f0_12 sf
(.)S
104 543 :M
.321 .032(In a centralised system, this is not a problem. Since everyone sees the single copy)J
90 558 :M
1.079 .108(of any data item, they see the same changes arise; there is a single, network-wide)J
90 573 :M
.381 .038(consistent ordering of events. Only one event can be processed at a time, so changes)J
90 588 :M
.155 .016(which arrive at the \322same\323 time will still be processed seperately, in some specific \(if)J
90 603 :M
.524 .052(arbitrary\) order. Thus, a centralised approach to data storage inherently introduces a)J
90 618 :M
f1_12 sf
-.083(serialisation)A
150 618 :M
f0_12 sf
1.777 .178( of change events, which, while potentially unpredictable, maintains)J
90 633 :M
-.089(consistency.)A
104 648 :M
.42 .042(Replicated systems can also achieve consistency through global serialisation. The)J
90 663 :M
(simplest approach is )S
192 663 :M
f1_12 sf
-.059(data locking)A
252 663 :M
f0_12 sf
.147 .015(. System components declare their intent to perform)J
90 678 :M
-.002(modifications on a data item by requesting a \322lock\323 on the data item. Once the change)A
90 693 :M
.662 .066(has been made, the lock is released and is available to other clients. Since only one)J
90 708 :M
1.559 .156(client at a time can hold the lock on an specific item, simultaneous changes are)J
90 723 :M
3.035 .304(prohibited and consistency is maintained. Locks can be defined at different)J
90 738 :M
1.14 .114(granularities, from the whole document down to the level of individual objects or)J
endp
%%Page: 4 4
%%BeginPageSetup
initializepage
(dourish; page: 4 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
2.879 .288(insertion points, but their role remains the same\321to avoid inconsistency by)J
90 96 :M
-.021(preventing simultaneous action on data items.)A
104 111 :M
2.039 .204(Many common floor control policies can be regarded as locks on the entire)J
90 126 :M
4.107 .411(workspace, restricting activity to one individual at a time. This is )J
479 126 :M
f1_12 sf
-.167(input)A
90 141 :M
-.09(multiplexing)A
150 141 :M
f0_12 sf
.86 .086(\321the reduction of multiple input channels \(one or more per individual)J
90 156 :M
.724 .072(collaborator\) to a single channel \(the input channel to the workspace\). Mechanisms)J
90 171 :M
.354 .035(such as baton-passing and round-robin divide access between the participants so that)J
90 186 :M
1.125 .113(only one has control at any point. Essentially, that participant holds a lock on the)J
90 201 :M
2.944 .294(entire workspace; no other participant can contribute until she loses control)J
90 216 :M
-.015(\(relinquishes her \322lock\323\), and so consistency is maintained.)A
90 257 :M
f0_18 sf
-.024(Managing Divergence)A
90 285 :M
f0_12 sf
1.468 .147(The variety of data management strategies is testament to the fact that no single)J
90 300 :M
1.277 .128(approach is applicable in all cases. In part, this is simply due to the considerable)J
90 315 :M
1.421 .142(variation in the needs of CSCW systems. In addition, it is because the choice of)J
90 330 :M
.418 .042(management strategies has strong implications for the interface and for the nature of)J
90 345 :M
.683 .068(collaborative interaction in a CSCW system \(e.g. Greenberg and Marwood \(1994\)\).)J
90 360 :M
.348 .035(Collaborative systems differ crucially from other distributed systems in that not only)J
90 375 :M
2.818 .282(the application, but also the interface, is distributed. The trade-offs between)J
90 390 :M
.426 .043(availability, transparency, consistency and responsiveness must be made with this in)J
90 405 :M
1.373 .137(mind, and so design must be constantly mindful of the way in which application)J
90 420 :M
-.009(distribution and interface distribution are mutually influential.)A
104 435 :M
1.577 .158(These issues become particularly problematic when trying to design a CSCW)J
90 450 :M
.862 .086(toolkit, which will be used to create and support a wide range of applications. The)J
90 465 :M
1.319 .132(toolkit designer is even further separated from end-users than is the developer of)J
90 480 :M
1.629 .163(individual applications; and so it becomes even more difficult to understand the)J
90 495 :M
1.114 .111(implications of distributed data strategies for particular usage situations. Here, we)J
90 510 :M
-.006(need to develop a general characterisation of distributed data management in CSCW.)A
90 543 :M
f0_14 sf
-.021(Inconsistency Avoidance and Streams of Activity)A
90 567 :M
f0_12 sf
2.212 .221(We begin with a simple but crucial observation; that most approaches to data)J
90 582 :M
1.543 .154(management in CSCW deal with )J
264 582 :M
f1_12 sf
1.404 .14(inconsistency avoidance)J
f0_12 sf
.531 .053( rather than )J
f1_12 sf
.219(consistency)A
90 597 :M
.32(management)A
f0_12 sf
1.024 .102(. Rather than working to achieve data consistency, they erect barriers)J
90 612 :M
.888 .089(which prevent inconsistency arising in the first place. This is a distributed systems)J
90 627 :M
2.218 .222(approach; the system manages the action of the separate components to avoid)J
90 642 :M
.354 .035(inconsistency arising. However, applying this same strategy to collaborative systems)J
90 657 :M
1.744 .174(is problematic. Our distributed entities are users, not programs; and they're less)J
90 672 :M
-.006(prepared to accept the imposition of global mechanisms to constrain their activity!)A
104 687 :M
2.05 .205(Since inconsistency arises through the simultaneous execution of conflicting)J
90 702 :M
.406 .041(operations, the simplest approach to avoiding inconsistency is to avoid simultaneous)J
90 717 :M
1.013 .101(action over individual data items. In other words, this approach attempts to define)J
90 732 :M
f1_12 sf
1.009 .101(single, global stream of activity)J
f0_12 sf
.927 .093( over the data space. Various common elements of)J
90 747 :M
1.508 .151(CSCW systems embody this model of a single stream of activity. Asynchronous)J
90 762 :M
.111 .011(access to the workspace\321using the distribution of work in time as a means to control)J
endp
%%Page: 5 5
%%BeginPageSetup
initializepage
(dourish; page: 5 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
-.014(access\321does just this, by sharing the single stream between multiple participants, one)A
90 96 :M
.201 .02(at a time. Floor control policies do likewise, as do conventional locking mechanisms,)J
90 111 :M
.175 .018(from the point of view of individual data items; locks ensure that each item is subject)J
90 126 :M
-.011(to a single thread of control, currently available to whoever holds the lock.)A
104 141 :M
1.006 .101(The alternative approach which I wish to explore here abandons this attempt to)J
90 156 :M
.995 .1(construct or create a single stream of activity out of multi-user activity. Instead, it)J
90 171 :M
.096 .01(begins with a picture of )J
208 171 :M
f1_12 sf
.047 .005(multiple, simultaneous streams of activity)J
409 171 :M
f0_12 sf
.065 .006( over user data, and)J
90 186 :M
-.076(then looks to )A
155 186 :M
f1_12 sf
-.024(manage divergence)A
f0_12 sf
-.022( between these streams. Divergence occurs when two)A
90 201 :M
1.149 .115(streams have different views of the system\325s state or of the data. This could arise)J
90 216 :M
1.375 .137(through simultaneous execution of conflicting operations; or through a lag in the)J
90 231 :M
-.017(propagation of compatible operations.)A
104 246 :M
-.006(Since this general view does not imply any particular number of parallel streams of)A
90 261 :M
.433 .043(activity, it encompasses the traditional views outlined earlier; they correspond to the)J
90 276 :M
.127 .013(special case of just one stream. A model based on divergence and multiple streams of)J
90 291 :M
.162 .016(activity is the )J
f1_12 sf
.271 .027(more general case)J
249 291 :M
f0_12 sf
.31 .031(; it subsumes attempts to maintain a single thread of)J
90 306 :M
-.009(control. This generality is critical to the design of a toolkit.)A
104 321 :M
1.085 .108(The purpose of exploring this divergence-based view is in pursuit of a generic,)J
90 336 :M
1.068 .107(specialisable model of distributed data management. By )J
f1_12 sf
.294(generic)A
414 336 :M
f0_12 sf
1.525 .152(, I mean that this)J
90 351 :M
.569 .057(model describes, in general terms, a range of distribution strategies which can be or)J
90 366 :M
2.351 .235(have been adopted in a variety of systems. By )J
346 366 :M
f1_12 sf
-.054(specialisable)A
409 366 :M
f0_12 sf
2.446 .245(, I mean that any)J
90 381 :M
1.528 .153(particular example can be operationally described as a refinement of the general)J
90 396 :M
.852 .085(model. The model, then, is not simply a tool for the analytic description of CSCW)J
90 411 :M
.778 .078(architectures and implementations; it can also be used to generate new ones, as the)J
90 426 :M
.769 .077(basis of an implementation. It has been developed as part of Prospero, a toolkit for)J
90 441 :M
.32 .032(CSCW application design which employs explicit specialisable models as a basis for)J
90 456 :M
1.263 .126(highly flexible, open-ended design \(Dourish, 1995a\); and the framework which it)J
90 471 :M
-.006(provides is the basis for creating data management strategies in CSCW applications.)A
90 504 :M
f0_14 sf
-.057(Divergence)A
90 528 :M
f0_12 sf
.412 .041(The elements of the divergence model are now in place. First, we look upon activity)J
90 543 :M
.849 .085(within a collaborative system as the progress of )J
f1_12 sf
1.66 .166(multiple, simultaneous)J
447 543 :M
f0_12 sf
1.12 .112( streams of)J
90 558 :M
-.024(activity. Second, we look upon the emergence of inconsistency as )A
408 558 :M
f1_12 sf
-.07(divergence)A
461 558 :M
f0_12 sf
-.139( between)A
90 573 :M
1.998 .2(these streams\325 views of data. Hence, we view the problems of distributed data)J
90 588 :M
.494 .049(management in terms of the )J
f1_12 sf
.93 .093(re-synchronisation )J
328 588 :M
f0_12 sf
.674 .067(of divergent streams of activity. As)J
90 603 :M
1.61 .161(the collaboration progresses, the streams of activity continually split and merge,)J
90 618 :M
.877 .088(diverge and synchronise. At points of synchronisation, they re-establish a common)J
90 633 :M
.864 .086(view of the data store; further individual activity will cause them to diverge again,)J
90 648 :M
-.009(necessitating further synchronisation further down the line.)A
90 672 :M
-.039(Divergence and Versioning)A
90 693 :M
.12 .012(This view of continual divergence and synchronisation is similar to that of versioning)J
90 708 :M
-.002(systems, which maintain a historical record of the versions of some object which have)A
90 723 :M
.05 .005(existed over time. They typically allow multiple versions of an object to exist at once,)J
90 738 :M
.504 .05(and in some, multiple versions can be simultaneously active. GMD\325s CoVer \(Haake)J
90 753 :M
1.198 .12(and Haake, 1993\) uses a version system to manage the cooperative work. CoVer,)J
endp
%%Page: 6 6
%%BeginPageSetup
initializepage
(dourish; page: 6 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
-.002(however, emphasises the creation and management of parallel versions rather than the)A
90 96 :M
.341 .034(subsequent integration of different versions \(divergent streams\). Munson and Dewan)J
90 111 :M
1.797 .18(\(1994\) go further in providing a framework explicitly organised around version)J
90 126 :M
2.23 .223(merging, but, like Haake and Haake, they primarily emphasise versioning and)J
90 141 :M
1.396 .14(merging within a context of \322asynchronous\323 work, rather than as a more general)J
90 156 :M
2.196 .22(approach to distributed data management. I want to consider the wider use of)J
90 171 :M
-.003(divergence as a general strategy \(discussed in more detail below\).)A
90 195 :M
-.022(Divergence and Operational Transformation)A
90 216 :M
2.183 .218(An alternative technique which has been employed effectively in a number of)J
90 231 :M
3.47 .347(collaborative systems is operational transformation \(Ellis and Gibbs, 1989;)J
90 246 :M
.411 .041(Beaudoiun-Lafon and Karsenty, 1992\). Operational transformation employs a model)J
90 261 :M
.326 .033(of multiple streams, and uses a transformation matrix to )J
367 261 :M
f1_12 sf
.041(transform)A
f0_12 sf
.146 .015( records of remote)J
90 276 :M
2.303 .23(operations before applying them locally, using information about the different)J
90 291 :M
.726 .073(contexts in which the operations arose. Clearly, this approach is much closer to the)J
90 306 :M
.096 .01(divergence model advocated here,but there are two principal differences. First, just as)J
90 321 :M
.49 .049(versioning approaches have typically emphasised )J
336 321 :M
f1_12 sf
.046(asynchronous)A
f0_12 sf
.202 .02( activity, operational)J
90 336 :M
-.024(transformation has typically emphasised )A
f1_12 sf
-.029(synchronous)A
347 336 :M
f0_12 sf
-.024(; as will be discussed, Prospero's)A
90 351 :M
.879 .088(model attempts to be more general. Second, operational transformation relies upon)J
90 366 :M
3.102 .31(the transformation matrix to resolve conflicts \(easier in the tightly-coupled,)J
90 381 :M
3.363 .336(synchronous domain\); whereas Prospero employs a more general notion of)J
90 396 :M
-.011(sychronisation which potentially offers a much wider scale of applicability.)A
104 411 :M
1.029 .103(In many ways, what\325s critical about the divergence view is what it )J
445 411 :M
f1_12 sf
.06(doesn\325t)A
f0_12 sf
.188 .019( say,)J
90 426 :M
.216 .022(because those areas of openness are the keys to the specialisable nature of the model.)J
90 441 :M
.202 .02(So far, nothing has been said about the defined units of activity, or what constitutes a)J
90 456 :M
-.002(\322stream\323; nothing has been said about the granularity of  \322divergence\323 per se and how)A
90 471 :M
.541 .054(it is recognised; and nothing has been said about the timescale on which divergence)J
90 486 :M
.579 .058(and resynchronisation takes place. In fact, these elements of openness are critical to)J
90 501 :M
-.011(the particular advantages of divergence for CSCW.)A
90 525 :M
-.017(Divergence and Replicated Databases)A
90 546 :M
.424 .042(One area of research in which divergence has been considered is replicated database)J
90 561 :M
.729 .073(management. In a replicated database, multiple copies of all or part of the database)J
90 576 :M
.418 .042(are maintained in parallel, in order to increase availability. The relationship between)J
90 591 :M
1.675 .168(this proposal and replicated databases is discussed in detail elsewhere \(Dourish,)J
90 606 :M
-.006(1995b\), but an outline is appropriate here.)A
104 621 :M
-.015(In database work, consistency is normally maintained by supporting the transaction)A
90 636 :M
.09 .009(model, in which database activity can be decomposed into a sequence of transactions.)J
90 651 :M
2.452 .245(Transactions group related operations for atomic execution; since transactions)J
90 666 :M
.877 .088(execution is all-or-nothing, consistency can be maintained. In replicated databases,)J
90 681 :M
-.002(research focusses on the detection of transaction conflicts and on finding an execution)A
90 696 :M
.269 .027(order which avoids potential conflicts. Various approaches can be used to sustain the)J
90 711 :M
-.002(transaction model under replication. For instance, distributed conflict detection can be)A
90 726 :M
.397 .04(used to generate the consistent serialisation globally, rather than individually at each)J
90 741 :M
1.125 .112(replication point; or rollback techniques can be used as an optimistic concurrency)J
90 756 :M
-.011(model, so that conflicting transactions can be undone and reexecuted later.)A
endp
%%Page: 7 7
%%BeginPageSetup
initializepage
(dourish; page: 7 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
104 81 :M
f0_12 sf
.082 .008(Both of these techniques, and in general the use of the transaction model, place the)J
90 96 :M
.793 .079(detection, avoidance and management of conflicts )J
f1_12 sf
.177(within)A
f0_12 sf
.663 .066( the database itself; unlike)J
90 111 :M
3.107 .311(this proposal, the application itself is typically not involved in the conflict)J
90 126 :M
1.416 .142(management process. This is generally true when database technology is used as)J
90 141 :M
1.698 .17(infrastructure for collaborative applications. However, there are times when this)J
90 156 :M
1.146 .115(model must break down. In Lotus Notes, for example, users interact directly with)J
90 171 :M
3.018 .302(document databases which are replicated amongst different sites but largely)J
90 186 :M
3.014 .301(disconnected from each other, and so conflicts can occur during periods of)J
90 201 :M
.107 .011(simultaneous work \(as here\). However, in these cases, Notes merely flags the conflict)J
90 216 :M
.577 .058(\(i.e. it maintains what I will call \322syntactic consistency\323\) and carries on, rather than)J
90 231 :M
-.006(providing any means for conflict resolution.)A
104 246 :M
.389 .039(Replicated databases deal with some problems which divergence raises; however,)J
90 261 :M
-.011(they generally do not directly exploit divergence to support multi-user activity.)A
90 294 :M
f0_14 sf
-.007(Capitalising on Divergence)A
90 318 :M
f0_12 sf
.131 .013(Divergence-based data management in CSCW offers three particular advantages over)J
90 333 :M
4.351 .435(other techniques. First, it is highly scalable, supporting inter-application)J
90 348 :M
.288 .029(communication from periods of milliseconds to periods of weeks or more. Second, it)J
90 363 :M
1.39 .139(opens up direct CSCW support for an area of application use\321one I term )J
475 363 :M
f1_12 sf
-.166(multi)A
500 363 :M
(-)S
90 378 :M
-.065(synchronous)A
151 378 :M
f0_12 sf
-.003(\321which are supported poorly or not-at-all by existing approaches. Third,)A
90 393 :M
1.636 .164(it directly supports common patterns of working activity based on observational)J
90 408 :M
-.013(studies which are at odds with the models embodied in most systems today.)A
90 432 :M
-.032(Scalability)A
90 453 :M
.755 .075(Scalability refers to graceful operation across some dimension of system design. In)J
90 468 :M
1.136 .114(particular, the dimension we are interested in here is the pace of interaction \(Dix,)J
90 483 :M
-.003(1992\); or, more technically, its relationship to the period of synchronisation.)A
104 498 :M
2.266 .227(The period of synchronisation is the regularity with which two streams are)J
90 513 :M
.82 .082(synchronised, and hence the length of time that two streams will remain divergent.)J
90 528 :M
-.014(When the period is very small, then synchronisation happens frequently, and therefore)A
90 543 :M
.519 .052(the degree of divergence is typically very small before the streams are synchronised)J
90 558 :M
.304 .03(and achieve a consistent view of the data store. When individuals use a collaborative)J
90 573 :M
2.502 .25(system with a very small period of synchronisation, their view of the shared)J
90 588 :M
1.18 .118(workspace is highly consistent, since synchronisation takes place often relative to)J
90 603 :M
.278 .028(their actions. This essentially characterises \322real-time\323 or synchronous groupware, in)J
90 618 :M
.861 .086(which users work \322simultaneously\323 in some shared space which communicates the)J
90 633 :M
.732 .073(effects of each user\325s actions to all participants \322as they happen\323. The synchronous)J
90 648 :M
1.401 .14(element arises from precisely the way in which the delay between divergence\(an)J
90 663 :M
2.211 .221(action taking place\) and synchronisation \(the action being propagated to other)J
90 678 :M
-.007(participants\) is small. This is one end of the \322pace of interaction\323 dimension.)A
104 693 :M
.484 .048(At the other end, synchronisation takes place much less frequently in comparison)J
90 708 :M
1.667 .167(to the actions of the users. There is considerably more divergence, arising from)J
90 723 :M
.778 .078(different sorts of activities which take place between synchronisation points. When)J
90 738 :M
.165 .016(the period of synchronisation is measured in hours, days or weeks, we approach what)J
90 753 :M
1.488 .149(is traditionally thought of as \322asynchronous\323 interaction. A \(well-worn\) example)J
endp
%%Page: 8 8
%%BeginPageSetup
initializepage
(dourish; page: 8 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
1.214 .121(might be the collaborative authoring of an academic paper, in which authors take)J
90 96 :M
.597 .06(turns revising drafts of individual sections or of the entire paper over a long period,)J
90 111 :M
-.006(passing the emerging document between them.)A
104 126 :M
1.89 .189(Within the CSCW community, these sorts of asynchronous interactions have)J
90 141 :M
2.677 .268(generally been seen and presented as being quite different from real-time or)J
90 156 :M
1.29 .129(synchronous interactions; \322synchronous )J
f1_12 sf
.487(or)A
306 156 :M
f0_12 sf
1.867 .187( asynchronous\323 has been a distinction)J
90 171 :M
2.612 .261(made in both design and analysis. However, by looking at them in terms of)J
90 186 :M
f1_12 sf
-.047(synchronisation)A
167 186 :M
f0_12 sf
.488 .049( rather than )J
f1_12 sf
.2(synchrony)A
f0_12 sf
.514 .051(,  we can see them them as two aspects of the)J
90 201 :M
1.902 .19(same form of activity, with different )J
f1_12 sf
.63(periods)A
327 201 :M
f0_12 sf
2.18 .218( of synchronisation. Being highly)J
90 216 :M
.008 .001(scalable across this dimension, the divergence approach provides the basis of a toolkit)J
90 231 :M
-.015(which generalises across this distinction.)A
90 267 :M
-.022(Multi-Synchronous Applications)A
90 288 :M
.118 .012(In fact, we can exploit a divergence-based view of distributed data management to go)J
90 303 :M
-.007(further than standard \322synchronous\323 and \322asynchronous\323 views of collaboration.)A
104 318 :M
.451 .045(Standard techniques attempt to maintain the illusion of a single stream of activity)J
90 333 :M
.446 .045(within the collaborative workspace. We know, however, that groups don\325t work that)J
90 348 :M
1.647 .165(way; it\325s much more common to have a whole range of simultaneous activities,)J
90 363 :M
.134 .013(possibly on different levels. Consider the collaboratively-authored paper again. In the)J
90 378 :M
2.982 .298(absence of restrictions introduced by particular technologies or applications,)J
90 393 :M
2.548 .255(individuals do not rigorously partition their activity in time, with all activity)J
90 408 :M
2.252 .225(concentrated in one place at a time; that is, they do not work in the strongly)J
90 423 :M
.473 .047(asynchronous style, one at a time, that many collaborative systems embody. A more)J
90 438 :M
.18 .018(familiar scenario would see the authors each take a copy of the current draft on paper)J
90 453 :M
1.102 .11(\(or on their portable computers...\), and work on them in parallel\321at home, in the)J
90 468 :M
.819 .082(office, on the plane or wherever. Here we have simultaneous work by a number of)J
90 483 :M
3.754 .375(individuals and subsequent )J
245 483 :M
f1_12 sf
.763(integration)A
f0_12 sf
3.068 .307( of those separate activities; neither)J
90 498 :M
-.028(synchronous, nor asynchronous, but )A
266 498 :M
f1_12 sf
-.042(multi-synchronous)A
f0_12 sf
-.049( work.)A
104 513 :M
.255 .026(The divergence model, and in particular the notion of multiple, parallel streams of)J
90 528 :M
1.476 .148(activity, is a natural approach to supporting this familiar pattern of collaborative)J
90 543 :M
1.163 .116(work. Working activities proceed in parallel \(multiple streams of activity\), during)J
90 558 :M
.397 .04(which time the participants are \322disconnected\323 \(divergence occurs\); and periodically)J
90 573 :M
1.571 .157(their individual efforts will be integrated \(synchronisation\) in order to achieve a)J
90 588 :M
-.004(consistent state and progress the activity of the group.)A
104 603 :M
.492 .049(Here, we're concerned with the )J
261 603 :M
f1_12 sf
.142(nature)A
f0_12 sf
.491 .049( of synchronisation; this is what allows for)J
90 618 :M
.204 .02(flexiblity, and will be discussed in more detail subsequently. At this stage, the details)J
90 633 :M
.052 .005(of synchronisation in a variety of cases are not of prime importance; examples will be)J
90 648 :M
.527 .053(considered in more depth later on. For the moment, however, what\325s important is to)J
90 663 :M
.169 .017(recognise the support for multi-synchronous working within this model of distributed)J
90 678 :M
-.02(data management.)A
90 702 :M
-.023(Supporting Opportunistic Work)A
90 723 :M
.771 .077(However, the use of divergence-based data management techniques is not simply a)J
90 738 :M
.656 .066(route to supporting a different style of working; it\325s also a means to )J
431 738 :M
f1_12 sf
.152 .015(more naturally)J
90 753 :M
f0_12 sf
-.003(support the other working styles to which CSCW has traditionally addressed itself.)A
endp
%%Page: 9 9
%%BeginPageSetup
initializepage
(dourish; page: 9 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
104 81 :M
f0_12 sf
1.392 .139(In studies of collaborative authoring, Beck and Bellotti \(1993\) highlighted the)J
90 96 :M
.424 .042(opportunistic way in which much activity was performed. In particular, they pointed)J
90 111 :M
1.282 .128(to the ways in which opportunistic action on the parts of individual collaborators)J
90 126 :M
1.008 .101(often went )J
148 126 :M
f1_12 sf
.214(against)A
f0_12 sf
.887 .089( pre-defined roles, responsibilities or plans. Individuals acted in)J
90 141 :M
-.002(response to specific circumstances; while the plans and strategies formed )A
f1_12 sf
(one)S
f0_12 sf
( guide to)S
90 156 :M
.902 .09(their actions, they were by no means the only factors at work, and in each of their)J
90 171 :M
.04 .004(case studies, they observed occasions on which agreements about who would do what)J
90 186 :M
.782 .078(and when were broken. Critically, these broken agreements are neither unusual nor)J
90 201 :M
.293 .029(problematic; this opportunistic activity is part of the natural process of collaboration.)J
90 216 :M
.186 .019(\(Suchman \(1987\) has, of course, made similar telling observations about the status of)J
90 231 :M
-.002(plans as resources for action rather than as rigorous constraints upon it.\))A
104 246 :M
.583 .058(The implication here is clear. We must be wary of introducing technology which)J
90 261 :M
.701 .07(inappropriately reifies plans and use pre-formed strategies to organise collaborative)J
90 276 :M
.211 .021(activity since observational studies show that they are opportunistically broken in the)J
90 291 :M
.555 .056(course of an activity. Turn-taking floor control policies, or partitioning a workspace)J
90 306 :M
-.005(into separate regions accessible to different individuals, are examples of technological)A
90 321 :M
.089 .009(approaches which structure user interaction around plans of this sort. Once again, this)J
90 336 :M
.407 .041(contrasts the particular needs of CSCW systems with traditional distributed systems,)J
90 351 :M
.52 .052(and shows that a distributed )J
f1_12 sf
.16(interface)A
276 351 :M
f0_12 sf
.73 .073( is an important consideration. To support the)J
90 366 :M
.878 .088(sort of opportunistic working described by Beck and Bellotti, then, our technology)J
90 381 :M
.483 .048(must relax rules about exclusion and partitioning; exactly the rules which have been)J
90 396 :M
-.014(employed to maintain the fiction of the single stream of activity.)A
104 411 :M
-.011(So the same sorts of mechanisms which were described earlier as supporting multi)A
500 411 :M
(-)S
90 426 :M
.121 .012(synchronous collaboration have, in fact, a wider range of applicability; they support a)J
90 441 :M
(more naturalistic means of )S
f1_12 sf
.008 .001(making asynchronous collaboration work)J
422 441 :M
f0_12 sf
.082 .008(. Divergence is a)J
90 456 :M
1.353 .135(direct consequence of these ways of working; and so a model of distributed data)J
90 471 :M
.746 .075(management based on a pattern of repeated divergence and sychronisation fits well)J
90 486 :M
-.02(with support for a wide range of working styles.)A
90 527 :M
f0_18 sf
-.008(Constraining Divergence: Consistency Guarantees)A
90 555 :M
f0_12 sf
-.01(The previous sections have outlined a model of distributed data management based on)A
90 570 :M
.801 .08(a continual cycle of divergence and synchronisation, and shown how this approach)J
90 585 :M
-.006(fits naturally with the needs of CSCW systems.)A
104 600 :M
.622 .062(However, there\325s a problem; and it\325s one which must be addressed if we hope to)J
90 615 :M
.6 .06(use divergence as a strategy for )J
f1_12 sf
.181(building)A
f0_12 sf
.75 .075( CSCW systems rather than simply talking)J
90 630 :M
1.101 .11(about them. At any given point, how can we maintain reasonable expectation that)J
90 645 :M
.701 .07(synchronisation will be possible? If two streams diverge arbitrarily, how can we be)J
90 660 :M
-.01(sure that a consistent view can be constructed later?)A
90 693 :M
f0_14 sf
-.01(Syntactic and Semantic Consistency)A
104 717 :M
f0_12 sf
.308 .031(The answer to this question has two components. The first lies in the very general)J
90 732 :M
.632 .063(nature of \322synchronisation\323. The notion of synchronisation is in not meant to imply)J
90 747 :M
-.004(that consistency can be achieved automatically. Certainly, it )A
382 747 :M
f1_12 sf
-.495(may)A
402 747 :M
f0_12 sf
-.032(  be possible in many)A
90 762 :M
.202 .02(cases\321particularly where divergence is slight, or user activity over the data is highly)J
endp
%%Page: 10 10
%%BeginPageSetup
initializepage
(dourish; page: 10 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
3.101 .31(structured\321to resolve divergence by purely automatic mechanisms; but this)J
90 96 :M
1.623 .162(automation is not central to the model. In other cases, conflict resulolution may)J
90 111 :M
.603 .06(require human intervention. However, crucially, we can make a distinction between)J
90 126 :M
f1_12 sf
-.093(semantic)A
133 126 :M
f0_12 sf
.236 .024( and )J
f1_12 sf
.12(syntactic)A
f0_12 sf
.498 .05( consistency. By \322semantic\323 consistency, I mean that the data)J
90 141 :M
1.935 .193(is internally \322consistent\323 and \322appropriate for its intended use\323. By \322syntactic\323)J
90 156 :M
.758 .076(consistency, I mean merely that two streams see the same view of the data, even if)J
90 171 :M
-.011(that view doesn\325t necessarily make sense in context.)A
104 186 :M
2.274 .227(Consider an example in collaborative writing again. Some changes\321simple)J
90 201 :M
2.286 .229(changes in formatting, text insertion, spelling correction and so forth\321can be)J
90 216 :M
.644 .064(automatically integrated and so synchronisation is largely automatic \(indeed, unless)J
90 231 :M
.418 .042(this were true, it would be impossible to build shared editing systems at all\). Others,)J
90 246 :M
.163 .016(however, are conflicts which require human intervention. For instance, if two authors)J
90 261 :M
.391 .039(have separately reworked the same paragraph in such a way that the new paragraphs)J
90 276 :M
1.262 .126(can not be integrated textually, then clearly the authors should be responsible for)J
90 291 :M
.385 .038(deciding which paragraph text should be used, and how the conflict can be resolved.)J
90 306 :M
.985 .099(So human intervention is required to achieve semantic consistency; but a different)J
90 321 :M
.864 .086(form of consistency\321syntactic\321can be achieved without human intervention. The)J
90 336 :M
.431 .043(system can apply the same approach which collaborative authors might well employ)J
90 351 :M
.867 .087(when out-of-touch with each other; preserving )J
326 351 :M
f1_12 sf
.243(both)A
f0_12 sf
.853 .085( texts, along with some marker)J
90 366 :M
2.301 .23(that \322this choice remains to be resolved\323. This approach is )J
f1_12 sf
.763(aggregation)A
477 366 :M
f0_12 sf
-.22(\321the)A
90 381 :M
.511 .051(combination of unresolvable data elements to form a single larger unit. Aggregation)J
90 396 :M
.825 .083(achieves syntactic consistency, which retains the property we require at the system)J
90 411 :M
.551 .055(level\321that the two streams share a view of the user data. It is sufficient for the two)J
90 426 :M
.364 .036(individuals involved to be able to carry on with their work for the moment, although)J
90 441 :M
-.013(they will have to come back and sort out the problem later, together.)A
104 456 :M
1.532 .153(So, by maintaining semantic consistency when possible, resorting to syntactic)J
90 471 :M
3.156 .316(consistency when necessary, and potentially using weak techniques such as)J
90 486 :M
1.62 .162(aggregation, we can achieve a )J
f1_12 sf
.577(working)A
294 486 :M
f0_12 sf
2.088 .209( level of consistency under a variety of)J
90 501 :M
-.011(circumstances. However, we can do more to help ensure that this works smoothly.)A
90 534 :M
f0_14 sf
-.042(Consistency Guarantees)A
90 558 :M
f0_12 sf
.641 .064(The second aspect of our solution is technological. We can augment the divergence)J
90 573 :M
.806 .081(and synchronisation framework with someething to manage expected divergence\321)J
90 588 :M
-.013(consistency guarantees.)A
104 603 :M
.722 .072(Clearly, we can be more confident about achieving consistency if we have some)J
90 618 :M
2.353 .235(idea of what type of divergence is likely to occur. The longer the periods of)J
90 633 :M
-.01(divergence, the less sure we can be about this, and hence about achieving consistency.)A
90 648 :M
-.013(If we knew in advance what sort of actions were likely to occur on a stream before the)A
90 663 :M
.007 .001(next point of synchronisation, we could make some kind of guarantee of the degree of)J
90 678 :M
-.028(consistency which can be achieved.)A
104 693 :M
.402 .04(In Prospero, consistency guarantees explicitly represent these interactions. Before)J
90 708 :M
.403 .04(divergence, one stream can \322describe\323 the likely actions which will occur during the)J
90 723 :M
.246 .025(period of divergence. For instance, if a user has opened a document for reading only,)J
90 738 :M
.316 .032(then it\325s likely that no changes will be made. Alternatively, it may be possible to say)J
90 753 :M
.594 .059(that the expected changes are all structural, rather than affecting the content, or that)J
endp
%%Page: 11 11
%%BeginPageSetup
initializepage
(dourish; page: 11 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
.373 .037(the user will only add information but not delete any. In exchange for this, the client)J
90 96 :M
-.017(can receive a statement of the level of synchronisation which can likely be achieved at)A
90 111 :M
1.146 .115(the next synchronisation point\321a consistency guarantee. Again, these are explicit)J
90 126 :M
.549 .055(computational artefacts in Prospero. Essentially, the guarantee says, \322if only actions)J
90 141 :M
.51 .051(of those sorts occur, given other declarations of expected activities in other streams,)J
90 156 :M
-.011(this level of consistency should be achievable when synchronisation occurs.\323)A
104 171 :M
1.778 .178(Consistency guarantees are a more general mechanism than traditional locks,)J
90 186 :M
1.01 .101(although they share certain properties. Consistency guarantees are used to manage)J
90 201 :M
1.342 .134(simultaneous action \(rather than to avoid it, which is the role of locks\); and as a)J
90 216 :M
2.319 .232(result, they embody more limited guarantees of later consistency \(while locks)J
90 231 :M
1.756 .176(guarantee absolute consistency\). However, they share the principle of providing)J
90 246 :M
3.057 .306(information about activities in advance, in exchange for guarantees of later)J
90 261 :M
.724 .072(consistency. We must be careful to avoid the problems of locking described above,)J
90 276 :M
.161 .016(such as poor support for opportunistic working. So Prospero introduces the following)J
90 291 :M
.303 .03(principle: the client can break its \322promise\323 about expected behaviour, in which case)J
90 306 :M
.411 .041(the system will no longer be held to its guarantee. If the client, or the user, performs)J
90 321 :M
.162 .016(actions which were not part of its declaration, then it may only be possible to achieve)J
90 336 :M
-.009(some weaker form of consistency \(e.g. through aggregation\).)A
104 351 :M
.406 .041(We use consistency guarantees, then, as a way to manage expectations, but not to)J
90 366 :M
.526 .053(enforce activity. Space is too limited here to go into the full details of this approach)J
90 381 :M
-.002(and the way in which it is embodied in Prospero; and in later sections, I will pass over)A
90 396 :M
.611 .061(the relationship between divergence, synchronisation and consistency guarantees. A)J
90 411 :M
-.01(fuller discussion is presented elsewhere \(Dourish, 1995b\).)A
90 452 :M
f0_18 sf
-.044(Divergence in Prospero)A
90 480 :M
f0_12 sf
.929 .093(Now that the major components of the divergence approach, and its benefits, have)J
90 495 :M
-.004(been outlined, we can look at how it operates in practice.)A
104 510 :M
.459 .046(Prospero is a CSCW toolkit written in Common Lisp which has been designed to)J
90 525 :M
.118 .012(provide application developers with a great deal of flexibility in tailoring the toolkit\325s)J
90 540 :M
.298 .03(components and strategies to the needs of specific applications or usage situations. It)J
90 555 :M
.362 .036(employs computational reflection \(Smith, 1984\) and open implementation \(Kiczales,)J
90 570 :M
.246 .025(1992\) to open up the implementation and allow application developers\321the toolkit\325s)J
90 585 :M
1.334 .133(users\321principled access to internal aspects of the toolkit. This approach exploits)J
90 600 :M
-.016(specialisable generic models of the sort outlined here.)A
104 615 :M
5.089 .509(Prospero\325s data distribution strategies are based on divergence. The)J
90 630 :M
1.793 .179(divergence/synchronisation patterns form a generalised framework within which)J
90 645 :M
.636 .064(particular mechanisms are implemented. This is encoded in an object-oriented class)J
90 660 :M
-.002(hierarchy; new strategies are developed by specialising these descriptions.)A
104 675 :M
.371 .037(Here, I will present examples to illustrate the use of the divergence mechanism in)J
90 690 :M
.728 .073(Prospero and show how divergence supports a wide range of application strategies.)J
90 705 :M
3.048 .305(The examples take the form of code fragments)J
349 702 :M
f0_9 sf
(2)S
354 705 :M
f0_12 sf
2.568 .257( illustrating the framework's)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
90 739.24 -.24 .24 233.24 739 .24 90 739 @a
90 754 :M
f0_9 sf
(2)S
95 757 :M
.06 .006( At this point, and as promised, I beg the indulgence of )J
297 757 :M
f1_9 sf
(non-)S
f0_9 sf
-.002(technical readers. However, the structure of the code)A
112 767 :M
-.004(fragments is more important than their detail.)A
endp
%%Page: 12 12
%%BeginPageSetup
initializepage
(dourish; page: 12 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
.063 .006(specialisation to the needs of particular applications. After presenting these examples,)J
90 96 :M
-.008(I\325ll step back to consider the structure of the framework itself.)A
104 111 :M
.452 .045(Before going into more detail, though, there are a number of points which should)J
90 126 :M
.482 .048(be made. First, the examples here have been considerably simplified to illustrate the)J
90 141 :M
.626 .063(main points in the space available. In particular, as suggested above, the interaction)J
90 156 :M
2.103 .21(between divergence management and consistency guarantees has been omitted.)J
90 171 :M
2.488 .249(Second, these examples operate on three levels at once, and it\325s critical to a)J
90 186 :M
.335 .034(conceptual understanding of the approach that these are kept separate. The first level)J
90 201 :M
.37 .037(is that of the example applications used to illustrate the ideas; the second level is the)J
90 216 :M
.578 .058(use of programming structures to realise these applications, and the third level\321the)J
90 231 :M
.161 .016(most important for this exposition\321is the use of the divergence model in providing a)J
90 246 :M
.678 .068(programming framework. The examples have been structured to highlight this third)J
90 261 :M
.153 .015(level; the result is that certain liberties have been taken with application requirements)J
90 276 :M
-.024(and efficient programming.)A
90 309 :M
f0_14 sf
-.049(Example: Shdr)A
104 333 :M
f0_12 sf
2.249 .225(Shdr is a simple multi-user shared whiteboard application with a replicated)J
90 348 :M
1.542 .154(architecture. Originally designed outside the divergence framework, its approach)J
90 363 :M
.962 .096(lends itself well to that model. Individual user actions are performed on the user\325s)J
90 378 :M
-.013(own copy of the data \(the record of whiteboard marks\), and are recorded in a buffer of)A
90 393 :M
1.186 .119(activity records. Periodically, the accumulated history is sent to other participants)J
90 408 :M
.63 .063(using a simple protocol defined at the level of semantically-meaningful events \(that)J
90 423 :M
.991 .099(is, in terms of drawing actions, rather than in terms of mouse movements or other)J
90 438 :M
-.017(input operations\). The frequency of updates is variable, but generally the event history)A
90 453 :M
-.013(will be transmitted multiple times per second.)A
90 468 411 242 rC
101 498 :M
-.145(\(defmethod perform-local-action :after \(\(action <edit-action>\)\))A
101 510 :M
-.123(    \(add-action-to-stream action *my-stream*\)\))A
101 534 :M
-.121(\(defmethod add-action-to-stream \(\(action <edit-action>\) \(stream <stream>\)\))A
101 546 :M
-.095(    \(push action \(stream-actions stream\)\)\))A
101 570 :M
-.12(\(defmethod add-action-to-stream :after \(action \(stream <bounded-stream>\)\))A
101 582 :M
-.088(    \(if \(full-p stream\))A
101 594 :M
-.085(         \(synchronise stream \(stream-remote stream\)\)\)\))A
101 618 :M
-.088(\(defmethod synchronise \(\(stream <bounded-stream>\) \(remote <remote-stream>\)\))A
101 630 :M
-.104(    \(dolist \(action \(reverse \(stream-actions stream\)\)\))A
101 642 :M
-.131(        \(propagate-action-to-stream action remote\)\))A
101 654 :M
-.103(    \(stream-reset stream\)\))A
101 678 :M
-.133(\(defmethod propagate-action-to-stream \(action \(stream <remote-stream>\)\))A
101 690 :M
-.138(    \(remote-call \(stream-host stream\) incorporate-action action\)\))A
96.5 469.5 403 239 rS
gR
gS 28 30 538 781 rC
169 721 :M
f0_10 sf
-.012(Figure 1: Mapping shdr\325s strategy into the Prospero framework.)A
104 747 :M
f0_12 sf
-.006(We can reconstruct the approach used by shdr within the divergence framework, as)A
90 762 :M
1.073 .107(in figure 1. Local actions create divergence from a shared view of the whiteboard)J
endp
%%Page: 13 13
%%BeginPageSetup
initializepage
(dourish; page: 13 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
1.276 .128(until synchronisation occurs when the history records are exchanged. Each user\325s)J
90 96 :M
.457 .046(actions are associated with a stream of their own, and are accumulated in the stream)J
90 111 :M
-.006(data structure until synchronisation occurs.)A
104 126 :M
.304 .03(In Prospero, user actions are explicitly represented within a class hierarchy rooted)J
90 141 :M
.39 .039(in the abstract class )J
190 141 :M
f4_11 sf
-.112(<action>)A
243 141 :M
f0_12 sf
.432 .043(. Different types of action are instances of subclasses)J
90 156 :M
-.005(of this class. In this example, we use the subclass )A
330 156 :M
f4_11 sf
-.065(<edit-action>)A
416 156 :M
f0_12 sf
-.035( to represent those)A
90 171 :M
.863 .086(actions which have an effect on the data store. So, actions which result in drawing)J
90 186 :M
-.013(activities \(such as making or erasing a mark\) would be classes as instances of )A
f4_11 sf
-.021(<edit-)A
90 201 :M
.579(action>)A
f0_12 sf
1.463 .146(, whereas those which have no effect on the data itself, such as cursor)J
90 216 :M
-.037(movement, are not.)A
104 231 :M
3.425 .343(Activity streams are also explicitly represented, under the abstract class)J
90 246 :M
f4_11 sf
-.112(<stream>)A
143 246 :M
f0_12 sf
1.537 .154(. Two subclasses of )J
f4_11 sf
.717(<stream>)A
308 246 :M
f0_12 sf
1.868 .187( are used here. The first, )J
f4_11 sf
1.049(<remote)A
497 246 :M
(-)S
90 261 :M
.208(stream>)A
f0_12 sf
.602 .06(, represents non-local streams \(i.e. the streams of other users\); the second,)J
90 276 :M
f4_11 sf
-.038(<bounded-stream>)A
196 276 :M
f0_12 sf
-.023(, is a particular kind of local stream with specialised behaviours.)A
90 291 :M
.322 .032(It captures those behaviours which are particular to the way in which we want to use)J
90 306 :M
2.337 .234(streams in this example; the way that shdr manages use data. In particular, a)J
90 321 :M
f4_11 sf
-.038(<bounded-stream>)A
196 321 :M
f0_11 sf
.144 .014( )J
f0_12 sf
1.132 .113(is one which accumulates some number of local actions and)J
90 336 :M
-.005(periodically flushes them to other participants.)A
104 351 :M
.15 .015(We map shdr\325s strategy into the Prospero framework by defining specific methods)J
90 366 :M
1.13 .113(on a generic function framework)J
f0_9 sf
0 -3 rm
(3)S
0 3 rm
261 366 :M
f0_12 sf
1.383 .138( which in turn describes the general model that)J
90 381 :M
1.202 .12(Prospero embodies. These are the hooks onto which specialised behaviour can be)J
90 396 :M
.714 .071(hung. For instance, we use the generic function )J
f4_11 sf
.262(perform-local-action)A
f0_12 sf
.878 .088(, which)J
90 411 :M
-.005(Prospero uses to effect operations on the local copy of user data, as a place to \322attach\323)A
90 426 :M
1.013 .101(the association of user actions with a specific stream. This is defined for )J
f4_11 sf
.473(<edit-)A
90 441 :M
-.127(action>)A
f0_11 sf
( )S
139 441 :M
f0_12 sf
.059 .006(operations, rather than all )J
266 441 :M
f4_11 sf
-.112(<action>)A
319 441 :M
f0_12 sf
.065 .006( operations, since it is only the actions)J
90 456 :M
.802 .08(which cause a change in the data store which contribute to divergence between the)J
90 471 :M
3.059 .306(two streams. Next, the test for whether a stream is \322full\323 and needs to be)J
90 486 :M
1.141 .114(synchronised\321a behaviour particular to bounded streams\321is made after any new)J
90 501 :M
.76 .076(action record is stored there, and so the after-method we define for )J
f4_11 sf
.323(add-action-)A
90 516 :M
(to-stream)S
f0_12 sf
( is specialised on )S
235 516 :M
f4_11 sf
-.038(<bounded-stream>)A
341 516 :M
f0_12 sf
-.017( rather than )A
f4_11 sf
-.029(<stream>)A
452 516 :M
f0_12 sf
-.034( and hence)A
90 531 :M
-.02(applies only to bounded streams.)A
90 564 :M
f0_14 sf
-.013(Example: Source Code Control)A
104 588 :M
f0_12 sf
1.863 .186(As a second example, consider a traditional source code control system in a)J
90 603 :M
.952 .095(collaborative software engineering environment. Typically, these will use a check)J
500 603 :M
(-)S
90 618 :M
.157 .016(in/check-out model for software components or modules, together with a dependency)J
90 633 :M
-.011(mechanism which records relationships between them.)A
104 648 :M
.066 .007(With the previous example under our belts, most of the structure of this example is)J
90 663 :M
.009 .001(already provided for us. We already have a means to accumulate and distribute sets of)J
90 678 :M
1.156 .116(changes which arise in one place or another, which can be reused here. The most)J
90 693 :M
.682 .068(important change we have to make, as illustrated in figure 2, concerns user-initated)J
90 708 :M
4.652 .465(synchronisation. The code fragment uses a new class of action \(called)J
90 723 :M
f4_11 sf
.421(<synchronise-action>)A
f0_12 sf
1.319 .132(\) to distinguish user operations which explicitly force)J
-4096 -4095 -1 1 -4094 -4095 1 -4096 -4096 @a
90 739.24 -.24 .24 233.24 739 .24 90 739 @a
90 754 :M
f0_9 sf
(3)S
95 757 :M
1.059 .106( I use CLOS terminology here for object-oriented concepts. In Smalltalk, the closest relative of a \322generic)J
112 767 :M
-.001(function\323 is a \322message\323; in C++, a \322virtual function\323.)A
endp
%%Page: 14 14
%%BeginPageSetup
initializepage
(dourish; page: 14 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
1.3 .13(synchronisation. For normal editing activities, the system simply accumulates the)J
90 96 :M
.588 .059(action records, as before. However, for synchronisation actions, the synchronisation)J
90 111 :M
-.034(function is invoked.)A
99 128 394 195 rC
104.5 136.5 387 185 rS
124 164 :M
-.135(\(defmethod add-action-to-stream \(\(action <edit-action>\) stream\))A
124 176 :M
-.095(    \(push action \(stream-actions stream\)\)\))A
124 200 :M
-.111(\(defmethod add-action-to-stream \(\(action <synchronise-action>\) stream\))A
124 212 :M
-.096(    \(synchronise stream \(stream-remote stream\)\)\))A
124 236 :M
-.104(\(defmethod synchronise \(stream \(remote <remote-stream>\)\))A
124 248 :M
(    ;; as figure 1 ...)S
124 260 :M
(    ...\))S
124 284 :M
-.129(\(defmethod propogate-action-to-stream \(action \(stream <remote-stream>\)\))A
124 296 :M
(    ;; as figure 1...)S
124 308 :M
(    ....\))S
gR
gS 28 30 538 781 rC
220 336 :M
f0_10 sf
-.01(Figure 2: Check-in/check-out strategy.)A
90 380 :M
f0_14 sf
-.012(Example: Multi-synchronous Editing)A
90 404 :M
f0_12 sf
1.112 .111(The first example modelled a fairly standard "synchronous" tool while the second)J
90 419 :M
.276 .028(used an application type normally considered asynchronous. As a final example, let's)J
90 434 :M
-.011(consider the implications of multi-synchronous working.)A
99 449 396 181 rC
107.5 454.5 386 167 rS
127 476 :M
-.106(\(demethod synchronise \(stream \(remote <remote-stream>\)\))A
127 488 :M
-.106(    \(dolist \(action \(reverse \(stream-actions stream\)\))A
127 500 :M
-.137(        \(integrate \(propagate-action-to-stream action remote\)\)\))A
127 512 :M
-.103(    \(stream-reset stream\)\))A
127 536 :M
-.142(\(defmethod propagate-action-to-stream \(action \(stream )A
127 548 :M
-.113(<remote-stream>\)\))A
127 560 :M
-.134(    \(remote-call \(stream-host stream\) incorporate-action )A
127 572 :M
-.187(action\)\))A
127 596 :M
-.145(\(defmethod incorporate-action \(action <edit-action>\))A
127 608 :M
-.142(    \(if \(compatible-p action\) \(locally-perform action\))A
127 620 :M
-.108(        \(aggregate action\)\)\))A
gR
gS 28 30 538 781 rC
199 641 :M
f0_10 sf
-.017(Figure 3: Supporting multi-synchronous activity.)A
104 667 :M
f0_12 sf
1.983 .198(With the exception of the possible use of consistency guarantees, which are)J
90 682 :M
.059 .006(omitted here due to space considerations, multi-synchronous activity is no different at)J
90 697 :M
3.158 .316(the point of divergence Once again, we can accumulate actions until some)J
90 712 :M
.135 .013(synchronisation action occurs, either automatically or by user request. This, however,)J
90 727 :M
.898 .09(is the point at which a more complex strategy is required. In the first example, we)J
90 742 :M
1.456 .146(could simply ignore data consistency problems, and in the second, asynchronous)J
90 757 :M
.405 .04(access ensured that such problems didn't arise. In this example, we have to be aware)J
endp
%%Page: 15 15
%%BeginPageSetup
initializepage
(dourish; page: 15 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
.463 .046(of the possibility of mutually inconsistent changes and act accordingly. So the focus)J
90 96 :M
-.009(of attention in this case is on the synchronisation procedures.)A
104 111 :M
.022 .002(The code frament in figure 3 illustrates two points. The first is that synchronisation)J
90 126 :M
.567 .057(is now requires processing \(i.e. it's not simply the transmission of information\); and)J
90 141 :M
.746 .075(the second is that its now the mutual achievement of both parties \(i.e. its no longer)J
90 156 :M
-.008(sufficient for the originating side to send the information and move on\).)A
104 171 :M
.024 .002(The approach is very simple. For the first time, the synchronisation procedure pays)J
90 186 :M
1.564 .156(attention to the return value of )J
254 186 :M
f4_11 sf
.185(propagate-action-to-stream)A
f0_12 sf
.441 .044(, since this can)J
90 201 :M
.289 .029(return information from the remote side. Here, we work to the model that integration)J
90 216 :M
-.018(work will be done by the remote stream, which may pass back modified data to reflect)A
90 231 :M
.265 .026(the resolution of conflicts; and so it  must be reintegated into the local stream's view.)J
90 246 :M
2.387 .239(We also see the way in which )J
260 246 :M
f4_11 sf
.372(incorporate-action)A
f0_12 sf
.995 .099( is processes records of)J
90 261 :M
.314 .031(activities originating in some other stream. In this case, we use the simplest strategy;)J
90 276 :M
.057 .006(if the remote action is an edit action, and if it is compatible with local changes, then it)J
90 291 :M
1.239 .124(is applied, and if not, then syntactic consistency is achieved through aggregation.)J
90 306 :M
.944 .094(Since the open strategy used in Prospero allows specialised definition of functions)J
90 321 :M
-.007(such as )A
f4_11 sf
-.01(compatible-p)A
208 321 :M
f0_12 sf
.034 .003( and )J
f4_11 sf
.024(locally-perform)A
f0_12 sf
.055 .006(, then we can be quite loose in what)J
90 336 :M
-.013(is accepted, and work to achieve semantic consistency when possible.)A
90 369 :M
f0_14 sf
-.007(Specialisation in Prospero)A
90 393 :M
f0_12 sf
.365 .036(From these examples, a pattern has built up of the way in which Prospero supports a)J
90 408 :M
1.258 .126(diverse range of applications. First, Prospero provides a set of default behaviours)J
90 423 :M
.607 .061(which embody mechanisms for collaborative data management. This is the function)J
90 438 :M
.847 .085(of a toolkit, and so in this respect, Prospero is not particularly different from other)J
90 453 :M
1.273 .127(toolkits. \(Clearly, the detail of Prospero\325s management strategies differs from the)J
90 468 :M
.121 .012(particular strategies employed in specific other toolkits; but in the more general sense)J
90 483 :M
1.293 .129(of the provision of management mechanisms, it accords to the standard model of)J
90 498 :M
1.557 .156(toolkits.\) Second, and critically, Prospero structures these mechanisms within an)J
90 513 :M
1.416 .142(object-oriented framework and reveals to applications and application developers)J
90 528 :M
.846 .085(elements of this framework as a means to introspection and intercession. Prospero,)J
90 543 :M
.096 .01(then, provides two, orthogonal interfaces the functionality of its collaboration support)J
90 558 :M
.96 .096(mechanisms. The first, traditional or )J
f1_12 sf
.257(base-level)A
328 558 :M
f0_12 sf
1.212 .121( interface provides facilities which)J
90 573 :M
.249 .025(clients can )J
f1_12 sf
.118(use)A
162 573 :M
f0_12 sf
.442 .044( to create collaborative applications. The second, )J
f1_12 sf
.125(meta-level)A
457 573 :M
f0_12 sf
.548 .055( interface)J
90 588 :M
.73 .073(provides a means by which internal functionality can be specialised to the needs of)J
90 603 :M
2.469 .247(particular applications. Design decisions are not locked in and hidden behind)J
90 618 :M
-.002(traditional abstraction barriers but are revealed so that they can be manipulated, so the)A
90 633 :M
.702 .07(toolkit can be used to support a much wider range of application requirements than)J
90 648 :M
-.006(would otherwise be possible \(Dourish, 1995a\).)A
90 689 :M
f0_18 sf
-.165(Summary)A
90 717 :M
f0_12 sf
.121 .012(Managing the consistency of distributed data is a critical issue for many collaborative)J
90 732 :M
.596 .06(systems. However, the interactive nature of CSCW systems means that many of the)J
90 747 :M
3.089 .309(techniques which might be adopted from other areas of distributed systems)J
90 762 :M
1.231 .123(engineering are not appropriate. Even when they can be used, the implications of)J
endp
%%Page: 16 16
%%BeginPageSetup
initializepage
(dourish; page: 16 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_12 sf
.377 .038(particular strategies typically limit them to a restricted set of applications; and hence)J
90 96 :M
-.003(they are not suitable for a toolkit to support a wide range of applications.)A
104 111 :M
2.513 .251(This paper has outlined an alternative approach. Rather than attempting to)J
90 126 :M
1.327 .133(maintain the illusion of a single stream of activity, it is based on divergence and)J
90 141 :M
2.956 .296(synchronisation between multiple, parallel streams. This general approach is)J
90 156 :M
.319 .032(particularly suited to the requirements of CSCW applications, and, as a )J
441 156 :M
f1_12 sf
-.054(specialisable)A
90 171 :M
f0_12 sf
.603 .06(model, it can be used as flexible basis for development. Along with the consistency)J
90 186 :M
.12 .012(guarantee mechanism, divergence forms the basis of the distributed data management)J
90 201 :M
.347 .035(in Propsero, a reflective toolkit for the design of collaborative applications. Prospero)J
90 216 :M
.287 .029(is a vehicle for the exploration of issues of flexibility and openness in the design and)J
90 231 :M
.162 .016(use of collaborative applications; and the use of divergence is a critical component of)J
90 246 :M
-.009(its open approach to CSCW design.)A
90 279 :M
f0_14 sf
-.012(Acknowledgements)A
90 303 :M
f0_12 sf
.393 .039(Alan Dix and John Lamping provided inspiration, while Dik Bentley, Jon Crowcroft)J
90 318 :M
-.003(and the conference reviewers improved the quality of exposition.)A
90 351 :M
f0_14 sf
-.019(References)A
90 375 :M
f0_10 sf
-.008(Ahuja, S., Ensor, J. and Lucco, S. \(1990\): \322A Comparison of Application Sharing Mechanisms in Real-)A
113 388 :M
.216 .022(time Desktop Conferencing\323, in )J
f1_10 sf
.235 .023(Proc. ACM Conf. Office Information Systems COIS\32590)J
f0_10 sf
.235 .023(, Boston,)J
113 401 :M
-.125(1990.)A
90 415 :M
2.396 .24(Beaudouin-Lafon, M. and Karsenty, A. \(1992\): "Transparency and Awareness in Real-Time)J
113 428 :M
.738 .074(Groupware Systems", in )J
218 428 :M
f1_10 sf
.805 .08(Proc. ACM Conf. User Interface Software and Technology UIST'92)J
f0_10 sf
(,)S
113 441 :M
-.024(Monterey, Ca., November 1992.)A
90 455 :M
1.194 .119(Beck, E. and Bellotti, V. \(1993\): \322Informed Opportunism as Strategy\323, in )J
f1_10 sf
1.676 .168(Proc. Third Eruopean)J
113 468 :M
-.012(Conference on Computer-Supported Cooperative Work ECSCW\32593)A
f0_10 sf
-.01(, Milano, Italy, 1993.)A
90 482 :M
.652 .065(Dix, A. \(1992\): \322Pace and Interaction\323, in )J
f1_10 sf
.771 .077(People and Computers VII: Proc. of HCI\32592)J
454 482 :M
f0_10 sf
.505 .05(, York, UK,)J
113 495 :M
-.125(1992.)A
90 509 :M
.682 .068(Dourish, P. and Bellotti, V. \(1992\): \322Awareness and Coordination in Shared Workspaces\323, in )J
482 509 :M
f1_10 sf
-.234(Proc.)A
113 522 :M
-.009(ACM Confe. Computer-Supported Cooperative Work CSCW\32592)A
369 522 :M
f0_10 sf
-.03(, Toronto, Canada, 1992.)A
90 536 :M
.484 .048(Dourish, P. \(1995a\): \322Developing a Reflective Model of Collaborative Systems,\323 )J
427 536 :M
f1_10 sf
.069 .007(ACM Transactions)J
113 549 :M
-.015(on Computer-Human Interaction)A
f0_10 sf
-.013(, 1995 \(in press\).)A
90 563 :M
1.658 .166(Dourish, P. \(1995b\): )J
184 563 :M
f1_10 sf
1.296 .13(\322Consistency Guarantees: Exploiting Operation Semantics for Consistency)J
113 576 :M
.117 .012(Management in Collaborative Systems\323)J
275 576 :M
f0_10 sf
.256 .026(, Rank Xerox EuroPARC Technical Report, Cambridge,)J
113 589 :M
-.117(UK, 1995.)A
90 603 :M
1.617 .162(Ellis, C. and Gibbs, S. \(1989\): \322Concurrency Control in a Groupware System\323, in )J
f1_10 sf
2.613 .261(Proc. ACM)J
113 616 :M
-.005(Conf.Manamagement of Data SIGMOD\32589)A
f0_10 sf
-.005(, Seattle, Washington, 1989.)A
90 630 :M
.707 .071(Greenberg, S., Roseman, R., Webster, D. and Bohnet, R. \(1992\): \322Human and Technical Factors in)J
113 643 :M
-.013(Distributed Group Drawing Tools\323, )A
f1_10 sf
-.013(Interacting with Computers)A
369 643 :M
f0_10 sf
-.019(, 4\(3\), pp. 364-392, 1992.)A
90 657 :M
-.002(Greenberg, S. and Marwood, D. \(1994\): \322Real-time Grouopware as a Distributed System: Concurrency)A
113 670 :M
.379 .038(Control and its Effect on the Interface\323, in )J
290 670 :M
f1_10 sf
.261 .026(Proc. ACM Conf Computer Supported Coooperative)J
113 683 :M
-.007(Work CSCW\32594)A
f0_10 sf
-.006(, Chapel Hill, North Carolina, 1994.)A
90 697 :M
1.181 .118(Haake, A. and Haake, J. \(1993\): \322Take CoVer: Exploiting Version Management in Collaborative)J
113 710 :M
-.014(Systems\323, in )A
f1_10 sf
-.015(Proc. InterCHI\32593)A
f0_10 sf
-.016(, Amsterdam, Netherlands, 1993.)A
90 724 :M
.232 .023(Kiczales, G. \(1992\): \322Towards a New Model of Abstraction in the Engineering of Software\323, in )J
482 724 :M
f1_10 sf
-.234(Proc.)A
113 737 :M
-.013(Workshop on Reflection and Meta-level Architectures IMSA\32592)A
367 737 :M
f0_10 sf
-.019(, Tokyo, Japan, 1992.)A
endp
%%Page: 17 17
%%BeginPageSetup
initializepage
(dourish; page: 17 of 17)setjob
%%EndPageSetup
-28 -30 :T
gS 28 30 538 781 rC
90 81 :M
f0_10 sf
.823 .082(Lauwers, C., Joseph, T., Lantz, K. and Romanow, A. \(1990\): \322Replicated Architectures for Shared)J
113 94 :M
1.635 .164(Window Systems: A Critique\323, in )J
265 94 :M
f1_10 sf
1.448 .145(Proc. ACM Conf. Office Information Systems COIS\32590)J
f0_10 sf
(,)S
113 107 :M
-.017(Boston, Massachussetts, 1990.)A
90 121 :M
.937 .094(Munson, J. and Dewan, P. \(1994\): \322A Flexible Object Merging Framework\323, in )J
f1_10 sf
1.173 .117(Proc. ACM Conf.)J
113 134 :M
-.002(Computer-Supported Cooperative Work CSCW\32594)A
f0_10 sf
-.002(, Chapel Hill, North Carolina, 1994.)A
90 148 :M
.879 .088(Smith, B. \(1984\): \322Reflection and Semantics in LISP\323, in )J
336 148 :M
f1_10 sf
.828 .083(Proc. ACM Symposium on Principles of)J
113 161 :M
-.039(Programming Languages POPL)A
243 161 :M
f0_10 sf
-.025(, Salt Lake City, Utah, 1984.)A
90 175 :M
.968 .097(Suchman, L. \(1987\): )J
181 175 :M
f1_10 sf
.915 .091(\322Plans and Situated Actions\323)J
f0_10 sf
.905 .091(, Cambridge University Press, Cambridge, UK,)J
113 188 :M
-.125(1987.)A
endp
%%Trailer
end		% md
%%EOF
